#%%
from statsmodels.stats.proportion import proportion_confint
import numpy as np

# Большая часть млекопитающих неспособны во взрослом возрасте переваривать лактозу, содержащуюся в молоке.
# У людей за расщепление лактозы отвечает фермент лактаза, кодируемый геном LCT.
# У людей с вариантом 13910T этого гена лактаза продолжает функционировать на протяжении всей жизни.
# Распределение этого варианта гена сильно варьируется в различных генетических популяциях.
# Из 50 исследованных представителей народа майя вариант 13910T был обнаружен у одного.
# Постройте нормальный 95% доверительный интервал для доли носителей варианта 13910T в популяции майя.
# Чему равна его нижняя граница? Округлите ответ до 4 знаков после десятичной точки.
#%%
n=50
n_success=1
alfa=0.05

normal_interval = proportion_confint(n_success, n, method = 'normal')
print np.round(normal_interval, 4)

# В условиях предыдущей задачи постройте 95% доверительный интервал Уилсона для доли носителей варианта 13910T
# в популяции майя. Чему равна его нижняя граница? Округлите ответ до 4 знаков после десятичной точки. 
#%%
normal_interval = proportion_confint(n_success, n, method = 'wilson')
print np.round(normal_interval, 4)

# Пусть в популяции майя действительно 2% носителей варианта 13910T, как в выборке, которую мы исследовали.
# Какой объём выборки нужен, чтобы с помощью нормального интервала оценить долю носителей гена 13910T с
# точностью ±0.01 на уровне доверия 95%?
#%%
from statsmodels.stats.proportion import samplesize_confint_proportion

n_samples = int(np.ceil(samplesize_confint_proportion(0.02, 0.01)))

print n_samples

# Постройте график зависимости объёма выборки, необходимого для оценки для доли носителей гена 13910T с
# точностью ±0.01 на уровне доверия 95%, от неизвестного параметра p. Посмотрите, при каком значении p нужно
# больше всего испытуемых. Как вы думаете, насколько вероятно, что выборка, которую мы анализируем, взята из
# случайной величины с этим значением параметра?

# Как бы вы не ответили на последний вопрос, рассмотреть объём выборки, необходимый при таком p, всё равно
# полезно — это даёт максимально пессимистичную оценку необходимого объёма выборки.

# Какой объём выборки нужен в худшем случае, чтобы с помощью нормального интервала оценить долю носителей гена
# 13910T с точностью ±0.01 на уровне доверия 95%?
#%%
samples = [(0.01*x,int(np.ceil(samplesize_confint_proportion(0.01*x, 0.01)))) for x in xrange(0,100,1)]

#%%
%matplotlib inline
import matplotlib.pyplot as plt

samples_x,samples_y = zip(*samples)
line_train = plt.plot(samples_x, samples_y)

#%%
print max(samples, key=lambda (x,y): y)
